{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-typestate-pattern-index-mdx-aa9460aba384dc0c0162.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./content/posts/typestate-pattern/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    blockquote: \"blockquote\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    ol: \"ol\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Typestate Design Pattern\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"the new Design Pattern in Swift 5.9\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Typestate 디자인 패턴은 객체의 상태를 타입으로 표현하고, 상태 전환을 타입 시스템으로 관리하는 강력한 디자인 패턴이다.\"), \"\\n\", React.createElement(_components.p, null, \"회전식 개찰구를 예로 들어보자.\"), \"\\n\", React.createElement(\"center\", null, React.createElement(\"img\", {\n    src: \"https://swiftology.io/turnstile.png\"\n  })), \"\\n\", React.createElement(_components.p, null, \"잠긴 개찰구에 동전을 넣고 밀면 개찰구가 열린다. 한번열리면 다시 닫힘 상태로 돌아간다.\"), \"\\n\", React.createElement(\"center\", null, React.createElement(\"img\", {\n    src: \"https://swiftology.io/turnstile-state-machine.png\"\n  })), \"\\n\", React.createElement(_components.p, null, \"동전을 넣고 push 하는 과정을 코드로 풀어보면 다음과 같다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-swift\"\n  }, \"struct Turnstile {\\n  enum State {\\n    case locked\\n    case unlocked\\n  }\\n  \\n  private var state: State = .locked\\n  private(set) var coins: Int = 0\\n\\n  mutating func insertCoin() {\\n    guard state == .locked else { return }\\n    \\n    coins += 1\\n    state = .unlocked\\n  }\\n  \\n  mutating func push() {\\n  \\tstate = .locked\\n\\t}\\n}\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-swift\"\n  }, \"var turnstile = Turnstile() // locked\\nturnstile.insertCoin() // unlocked\\nturnstile.push()\\n\")), \"\\n\", React.createElement(_components.p, null, \"이와 같이 코드가 예쁘게만 돌아가지 않는다.\", React.createElement(\"br\"), \"\\n만약 돈을 넣고 밀지 않았다가, 한번더 돈 넣고 미는 상황이 발생한다면?\", React.createElement(\"br\"), \"\\n만약 돈을 넣지 않고 미는 상황이 발생한다면?\", React.createElement(\"br\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-swift\"\n  }, \"var turnstile = Turnstile() // locked\\n\\nturnstile.insertCoin() // unlocked\\nturnstile.insertCoin() // ❌ ERROR: Can't insert coins when unlocked\\n\\nturnstile.push() // locked\\nturnstile.push() // ❌ ERROR: Can't push when locked\\n\")), \"\\n\", React.createElement(_components.p, null, \"이 경우 컴파일 에러가 나지는 않지만, 의도한 대로 동작하지는 않는다.\"), \"\\n\", React.createElement(_components.h2, null, \"Typestae Driven Pattern 의 출두\"), \"\\n\", React.createElement(_components.p, null, \"로직적인 이슈가 있다면 컴파일 단에서 확인하겠다는 취지의 typestate driven pattern 이 나오게 된 것!\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-swift\"\n  }, \"extension Turnstile where State == Locked {\\n    func insertCoin() -> Turnstile<Unlocked> { // insertCoin operation can only be performed on `Turnstile<Locked>`\\n        // guard state == .locked else { return }\\n        return Turnstile<Unlocked>(coins: coins + 1)\\n    }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"위와 같이 Turnstile 을 생성하면 Unlocked 상태 일 때에만 insertCoin 함수를 호출할 수 있다. guard 문으로 감싸서 현재 상태 state 를 확인할 필요가 없다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-swift\"\n  }, \"extension Turnstile where State == Unlocked {\\n    func push() -> Turnstile<Locked> {\\n        return Turnstile<Locked>(coins: coins)\\n    }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"마찬가지로 push 는 Locked 상태에서만 유효한 메소드가 된다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-swift\"\n  }, \"unlocked.insertCoin() // ❌ ERROR: Can't insert coin into an unlocked turnstile\\n\\nlocked = unlocked.push()\\nlocked.push() // ❌ ERROR: Can't push a locked turnstile\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"컴파일 에러를 발생함으로써 비정상적인 동작은 수행하지 않도록 보장할 수 있다.\"), \"\\n\", React.createElement(_components.h2, null, \"하지만 여전히 문제가 있다.\"), \"\\n\", React.createElement(_components.p, null, \"하지만 여기에도 문제는 있다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-swift\"\n  }, \"var locked = Turnstile<Locked>()\\nvar unlocked = locked.insertCoin()\\nunlocked = locked.insertCoin()\\n\")), \"\\n\", React.createElement(_components.h3, null, \"1. 값 타입의 복사 문제 (Copy semantics)\"), \"\\n\", React.createElement(_components.p, null, \"Turnstile은 구조체로 정의되어있기 때문에 \", React.createElement(_components.code, null, \"insertCoin()\"), \" 메서드를 호출할 때마다 locked 의 복사본이 생성된다. 즉, locked 의 복사본에 대한 결과를 unlocked에 할당한다. 문제는 locked 는 여전히 초기 상태의 객체로 유지 된다는 것이다.\"), \"\\n\", React.createElement(_components.p, null, \"따라서, 이후에 \", React.createElement(_components.code, null, \"locked.insertCoin()\"), \"을 다시 호출해도 locked는 여전히 복사된 상태로 작업하므로, 예상과 다른 동작이 발생한다.\"), \"\\n\", React.createElement(_components.h3, null, \"2. 상태 전환이 제대로 적용되지 않음\"), \"\\n\", React.createElement(_components.p, null, \"Typestate 패턴의 핵심은 각 상태를 명확히 정의하고 허용된 전환만 가능하게 제한하는 것이다. 그러나 위 코드에서는 locked의 상태가 계속 바뀌지 않고 원래 상태로 남아있기 때문에 상태 전환이 제대로 적용되지 않는다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"locked.insertCoin()\"), \" 은 새로운\", React.createElement(_components.code, null, \"unlocked\"), \" 를 반환하지만, \", React.createElement(_components.code, null, \"locked\"), \" 자체는 여전히 Locked 상태이다.\"), \"\\n\", React.createElement(_components.li, null, \"다시 \", React.createElement(_components.code, null, \"locked.insertCoin()\"), \" 을 호출하면, locked는 여전히 Locked 상태로 시작한다.\"), \"\\n\", React.createElement(_components.li, null, \"결과적으로 Locked는 상태 전환 로직이 제대로 동작하지 않으며, 코드는 실제 상태를 반영하지 못한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"어떻게 해결해?\"), \"\\n\", React.createElement(_components.h3, null, \"구조체를 클래스로 바꾸면?\"), \"\\n\", React.createElement(_components.p, null, \"직관적으로는 \", React.createElement(_components.code, null, \"Turnstile\"), \" 유형을 구조체 대신 클래스로 선언하는 방법이 있다. 상태를 전환할 때마다 새로운 복사본 객체를 생성하는 대신 동일한 인스턴스를 계속 가리키고 최신 상태를 관찰하는 것이다.\"), \"\\n\", React.createElement(_components.p, null, \"안타깝게도, 아래 두가지 문제가 존재한다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Typestate 패턴에서는 각 상태를 독립적인 타입으로 표현해야 한다.\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"클래스는 동일한 메모리를 참조하기 때문에, 서로 다른 타입의 상태를 한 객체로표현할 수 없다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"참조 방식은 Race Condition (경합 상태) 같은 문제를 발생할 수 있다.\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"예를 들어서 여러 스레드에서 같은 객체를 동시에 수정하면 예층 불가능한 오류가 발생할 수 있다.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"actor 를 사용하면?\"), \"\\n\", React.createElement(_components.p, null, \"구조체에서 클래스나 actor 로 바꾸면 상태전환이 비동기적으로 처리되어야 하며, 시스템이 더 복잡해 질 수 있다.\"), \"\\n\", React.createElement(_components.h3, null, \"그럼 어떻게 해? swift 5.9의 메모리 소유 모델\"), \"\\n\", React.createElement(_components.p, null, \"원하는 결과가 뭔지 다시 생각해보자. 상태 전환에서 locked의 상태를 업데이트하고, 이전 상태를 사용할 수 없도록 설계해야 한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-swift\"\n  }, \"var locked = Turnstile<Locked>()\\nvar unlocked = locked.insertCoin()\\n// 이후 locked는 더 이상 유효하지 않음\\n\")), \"\\n\", React.createElement(_components.p, null, \"이를 위해서는 상태 전환 후 이전 상태를 사용할 수 없도록 해야 한다.\"), \"\\n\", React.createElement(_components.p, null, \"이게 바로 Swift 5.9의 메모리 소유 모델이 나오게 된 이유이다! 이를 통해 Typestate 패턴에 맞는 설계를 구현할 수 있다.\"), \"\\n\", React.createElement(_components.h2, null, \"Noncopyable State\"), \"\\n\", React.createElement(_components.p, null, \"swift 5.9 에서는 Noncopyable 타입 (복사 불가능한 타입)을 도입 했으며 'move-only' 타입으로 불리기도 한다. 이 타입은 구조체나 열거형에 \", React.createElement(_components.code, null, \"~Copyable\"), \" ('~' : NOT 을 의미) 키워드를 사용하여 정의한다. 이렇게 정의된 타입은 값이 복사되지 않음을 컴파일러에게 알리는 역할을 한다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Notcopyable 타입이란?\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"특정 값이 복사되지 않도록 제한\"), \"\\n\", React.createElement(_components.li, null, \"복사를 막음으로써 값을 안전하게 한 번만 사용하도록 강제\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"consuming 함수란?\"), \"\\n\", React.createElement(_components.p, null, \"consuming 함수란 값을 '소모' 하는 함수로, 호출 이후 원래 값을 더이상 사용할 수 없게 만든다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-swift\"\n  }, \"func changeState(_ state: consuming State) { ... }\\n\")), \"\\n\", React.createElement(_components.p, null, \"이 함수에 값을 전달하면, 해당 값은 함수 내부에서만 사용되고 호출 이후에는 접근할 수 없다.\"), \"\\n\", React.createElement(_components.p, null, \"Typestate 패턴에서는 상태 전환 후 이전 상태를 무효화 해야한다.\"), \"\\n\", React.createElement(_components.p, null, \"Noncopyable 타입과 consuming 함수를 활용하면, 상태 전환 후 이전 상태를 강제로 사용할 수 없도록 컴파일러가 보장한다. 이를 통해 Typestate 패턴의 안전성과 일관성을 강화할 수 있다.\"), \"\\n\", React.createElement(_components.p, null, \"Turnstile 예시로 다시 돌아와 보자.\"), \"\\n\", React.createElement(_components.p, null, \"Turnstile 을 \", React.createElement(_components.code, null, \"~Copyable\"), \" 타입으로 정의한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-swift\"\n  }, \"struct Turnstile<State>: ~Copyable {\\n  ...\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"모든 함수를 consuming 함수로 변경한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-swift\"\n  }, \"extension Turnstile where State == Locked {\\n  consuming func insertCoin() -> Turnstile<Unlocked> {\\n    Turnstile<Unlocked>(coins: coins + 1)\\n  }\\n}\\n\\nextension Turnstile where State == Unlocked {\\n  consuming func push() -> Turnstile<Locked> {\\n    Turnstile<Locked>(coins: coins)\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"처음 위의 코드를 다시 실행하게 되면 컴파일 에러가 발생한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"let locked = Turnstile<Locked>()\\nvar unlocked = locked.insertCoin()\\nunlocked = locked.insertCoin() // ❌ ERROR: 'locked' consumed more than once\\n\")), \"\\n\", React.createElement(_components.p, null, \"Unlocked 상태로 전환하자마자 \", React.createElement(_components.code, null, \"locked\"), \" 변수의 수명이 종료되어 재사용이 불가하기 때문이다.\"), \"\\n\", React.createElement(_components.h2, null, \"정상 코드\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-swift\"\n  }, \"var locked = Turnstile<Locked>()\\nvar unlocked = locked.insertCoin()\\n// assigning new locked value\\nlocked = unlocked.push()\\nunlocked = locked.insertCoin() // assigning next state\\nunlocked.coins // 2\\n\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"초기 상태 설정\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-swift\"\n  }, \"var locked = Turnstile<Locked>()\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"동전을 넣어 상태 전환\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-swift\"\n  }, \"var unlocked = locked.insertCoin()\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"locked.insertCoin()\"), \" 메서드를 호출하면, Turnstile이 Locked 상태에서 Unlocked 상태로 전환된다.\"), \"\\n\", React.createElement(_components.li, null, \"이 메서드의 결과로 반환된 새 상태를 unlocked에 할당한다.\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"unlocked는 이제 \", React.createElement(_components.code, null, \"Turnstile<Unlocked>\"), \" 타입을 가지며, “잠금 해제된 상태”이다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"이 시점에서 locked는 여전히 이전 상태(Locked)를 유지하고 있다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"다시 잠금 상태로 전환\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-swift\"\n  }, \"locked = unlocked.push()\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"locked.insertCoin()\"), \" 메서드를 호출하면, Turnstile이 Locked 상태에서 Unlocked 상태로 전환된다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"이 메서드의 결과로 반환된 새 상태를 unlocked에 할당한다.\"), \"\\n\", React.createElement(_components.li, null, \"unlocked는 이제 \", React.createElement(_components.code, null, \"Turnstile<Unlocked>\"), \" 타입을 가지며, “잠금 해제된 상태”이다.\"), \"\\n\", React.createElement(_components.li, null, \"이 시점에서 locked는 여전히 이전 상태(Locked)를 유지하고 있다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"다음 상태로 전환\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-swift\"\n  }, \"unlocked = locked.insertCoin()\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"체인형 operation 도 가능하다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-swift\"\n  }, \"var turnstile = Turnstile<Locked>()\\n  .insertCoin()\\n  .push()\\n  .insertCoin()\\n  .push()\\n  \\nturnstile.coins // 2\\n\\nturnstile\\n  .insertCoin()\\n  .insertCoin() // ❌ ERROR: can't insertCoin again\\n  .push()\\n  .push() // ❌ ERROR: can't push again\\n\")), \"\\n\", React.createElement(_components.h1, null, \"정리\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Typestate 패턴은 객체의 상태를 명확히 정의하고, 상태에 따라 가능한 동작을 제한하는 디자인 패턴이다.\"), \"\\n\", React.createElement(_components.li, null, \"특징\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"설계 : 객체의 상태를 타입으로 표현한다.\"), \"\\n\", React.createElement(_components.li, null, \"안전성 : 컴파일 타임에 허용되지 않는 동작을 방지한다.\"), \"\\n\", React.createElement(_components.li, null, \"상태 전환 : 상태 변경 후 이전 상태는 더이상 사용할 수 없다. 상태 전환은 새 객체를 생성하는 방식으로 처리한다.\"), \"\\n\", React.createElement(_components.li, null, \"명확한 제어 : 각 상태는 고유한 기능만 가지므로, 불필요한 복잡성을 줄인다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Swift 5.9 Noncopyable 타입: 상태 전환 후 잘못된 상태 재사용을 방지한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"참고\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://swiftology.io/articles/typestate/#what-is-a-typestate-design-pattern\"\n  }, \"https://swiftology.io/articles/typestate/#what-is-a-typestate-design-pattern\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/user/github/blog/content/posts/typestate-pattern/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","title","description","pathname","image","children","canonicalUrl","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","React","lang","name","content","property","rel","type","sizes","href","withPrefix","tags","tagsPath","basePath","useMinimalBlogConfig","jsx","map","tag","i","key","slug","Link","sx","t","_t$styles","styles","a","to","replaceSlashes","_createMdxContent","props","_components","Object","assign","h1","blockquote","p","pre","code","h2","h3","ul","li","strong","ol","_provideComponents","components","src","className","wrapper","MDXLayout","post","shadow","v","data","Layout","Heading","as","variant","color","mt","fontSize","date","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","excerpt","banner","childImageSharp","resize","undefined","MinimalBlogCorePost","Post","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}