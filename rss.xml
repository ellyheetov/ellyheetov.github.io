<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Minimal Blog - @lekoarts/gatsby-theme-minimal-blog]]></title><description><![CDATA[Typography driven, feature-rich blogging theme with minimal aesthetics. Includes tags/categories support and extensive features for code blocks such as live preview, line numbers, and line highlighting.]]></description><link>https://minimal-blog.lekoarts.de</link><generator>GatsbyJS</generator><lastBuildDate>Sat, 08 Mar 2025 03:33:25 GMT</lastBuildDate><item><title><![CDATA[Typestate Design Pattern]]></title><link>https://minimal-blog.lekoarts.de/typestate-design-pattern</link><guid isPermaLink="false">https://minimal-blog.lekoarts.de/typestate-design-pattern</guid><pubDate>Wed, 15 Jan 2025 15:00:00 GMT</pubDate><content:encoded>&lt;p&gt;the new Design Pattern in Swift 5.9 Typestate 디자인 패턴은 객체의 상태를 타입으로 표현하고, 상태 전환을 타입 시스템으로 관리하는 강력한 디자인 패턴이다.

회전식 개찰구를 예로 들어보자.

잠긴 개찰구에…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://minimal-blog.lekoarts.de/typestate-design-pattern&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item></channel></rss>