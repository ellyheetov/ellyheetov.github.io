{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-typestate-pattern-index-mdx","path":"/typestate-design-pattern/","result":{"data":{"post":{"slug":"/typestate-design-pattern","title":"Typestate Design Pattern","date":"16.01.2025","tags":[{"name":"Programming","slug":"programming"},{"name":"Design Pattern","slug":"design-pattern"},{"name":"Swift","slug":"swift"}],"description":"about typestate design pattern","canonicalUrl":"https://typestate_design_pattern.com","excerpt":"the new Design Pattern in Swift 5.9 Typestate 디자인 패턴은 객체의 상태를 타입으로 표현하고, 상태 전환을 타입 시스템으로 관리하는 강력한 디자인 패턴이다.\n\n회전식 개찰구를 예로 들어보자.\n\n잠긴 개찰구에…","timeToRead":12,"banner":null}},"pageContext":{"slug":"/typestate-design-pattern","formatString":"DD.MM.YYYY","frontmatter":{"title":"Typestate Design Pattern","date":"2025-01-16","description":"about typestate design pattern","tags":["Programming","Design Pattern","Swift"],"canonicalUrl":"https://typestate_design_pattern.com"}}},"staticQueryHashes":["2421966660","2744905544","3090400250"],"slicesMap":{}}